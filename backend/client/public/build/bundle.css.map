{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../DiceInput.svelte",
    "../../ParadiceLogo.svelte",
    "../../Player.svelte",
    "../../SideBar.svelte",
    "../../Table.svelte",
    "../../CreateParadice.svelte",
    "../../Game.svelte",
    "../../Home.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { modValidator } from './validators.js';\n  import Player from './Player.svelte';\n\n  import { writable } from \"svelte/store\";\n\n  export let dice = [\n    { id: 0, label: \"D4\", range: 4, qty: parseInt(localStorage.getItem(\"D4\")) || 0, result: 0 },\n    { id: 1, label: \"D6\", range: 6, qty: parseInt(localStorage.getItem(\"D6\")) || 0, result: 0 },\n    { id: 2, label: \"D8\", range: 8, qty: parseInt(localStorage.getItem(\"D8\")) || 0, result: 0 },\n    { id: 3, label: \"D10\", range: 10, qty: parseInt(localStorage.getItem(\"D10\")) || 0, result: 0 },\n    { id: 4, label: \"D12\", range: 12, qty: parseInt(localStorage.getItem(\"D12\")) || 0, result: 0 },\n    { id: 5, label: \"D20\", range: 20, qty: parseInt(localStorage.getItem(\"D20\")) || 0, result: 0 },\n    { id: 6, label: \"D100\", range: 100, qty: parseInt(localStorage.getItem(\"D100\")) || 0, result: 0 },\n  ]\n  export let modifier = '';\n\n  $: {\n    dice.forEach((d) => {\n      localStorage.setItem(d.label, d.qty);\n    })\n  }\n\n  function randomInt(dieid, qty){\n    let range = dice[dieid]['range'];\n    let res = 0;\n    if (qty > 0){\n      for (let index = 0; index < qty; index++) {\n      let r = Math.random() * 100;\n      let mod = range/100;\n      let d = Math.round(r*mod);\n      res = res + d;\n      }\n    }\n    modifier = res;\n    return res;\n  }\n\n  let latestroll = 0;\n\n</script>\n\n<style>\n\n:global(.test) {\n  color: white;\n}\n\n</style>\n\n\n{#each dice as die}\n<label class=\"test\">\n\t{die.label} <input type=number bind:value={die.qty} min=0 max=20>\n</label>\n{/each}\n<label class=\"test\">\n\tMod <input pattern=\"[+-]*[0-9]{1,3}\" title=\"(+/-)# please\" size=5 type=text bind:value={modifier}> {modValidator(modifier)}\n\n</label>\n\n",
    "<script>\n\n</script>\n\n<style>\n\n  .logo-sidebar {\n    display: flex;\n    max-width: 200px;\n    margin: 1rem 2rem;\n    width: 100%;\n  }\n\n</style>\n\n<img class=\"logo-sidebar\" src=\"/images/logo-small.png\" alt=\"PARADICE\" border=\"0\">\n",
    "<script>\n\n    export let playername = 'Anonymous player';\n    export let latestroll = 0;\n\n</script>\n\n<style>\n\n.playername {\n\n    background-color: rgb(0, 100, 190);\n    border: 1em;\n    padding: 0.2em;\n}\n\n</style>\n\n<h2 class=\"playername\">Welcome {playername}!</h2>\n<p class=\"latestroll\">Your latest roll was: {latestroll}</p>",
    "<script>\n\nimport ParadiceLogo from './ParadiceLogo.svelte';\nimport LatestRolls from './LatestRolls.svelte';\nimport RollLog from './RollLog.svelte';\nimport RollDice from './RollDice.svelte';\n\n</script>\n\n<style>\n  .sidebar-content {\n    align-items: center;\n    background-color: #ffffff;\n\t  box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.35);\n    display: flex;\n    flex-direction: column;\n    margin: 1rem;\n    max-width: 230px;\n    padding: .5rem;\n    width: 100%;\n  }\n\n  .sidebar-item {\n    align-items: center;\n    border: 1px solid #CDB4CF;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    margin: .5rem 0;\n    padding: 1rem;\n    width: 100%;\n  }\n</style>\n\n<ParadiceLogo/>\n\n<div class=\"sidebar-content\">\n  <div class=\"sidebar-item\">\n    <LatestRolls/>\n  </div>\n  <div class=\"sidebar-item\">\n    <RollLog/>\n  </div>\n  <div class=\"sidebar-item\">\n    <RollDice/>\n  </div>\n</div>\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let tabletextures = [\n    { id: 0, name: \"Tavern #1\", path: 'table/img/table00.jpg', color:\"#761CEC\", selected:true},\n    { id: 1, name: \"Tavern #2\", path: 'table/img/table01.jpg', color:\"#FC8EAC\", selected:false},\n    { id: 2, name: \"Tavern #3\", path: 'table/img/table02.jpg', color:\"#A60570\", selected:false},\n  ];\n\n  let selected = 0;\n  let textureindex = 2;\n  let text = \"Game table selected by default\";\n\n  export let selectedImage = tabletextures[textureindex]['path'];\n  export let matchingcolor;\n\n  function setImage(i) {\n    selectedImage = tabletextures[i]['path'];\n    text = \"You chose \"+tabletextures[i]['name'];\n    matchingcolor = tabletextures[i]['color'];\n    tabletextures[selected].selected = false;\n    tabletextures[i].selected = true;\n    selected = i;\n\n\t\tdispatch('textureSelected', {\n\t\t\tpath: tabletextures[i]['path']\n\t\t});\n  }\n\n</script>\n\n<style>\nimg {\n    padding: 0.5em;\n    border: 0.1em solid aquamarine;\n\n}\n\n.selectedtexture {\n    padding: 0.5em;\n    border-radius: 10%;\n    width: 100px;\n    border: 0.1em solid red;\n\n}\n\n.texturesample {\n  padding: 0.5em;\n  border-radius: 10%;\n  width: 100px;\n}\n\n</style>\n\n<h1>Choose your game table texture</h1>\n\n{#each tabletextures as { id, path, selected }, i}\n{#if selected}\n<img on:click|preventDefault={() => setImage(i)} class=\"selectedtexture\"  src=\"{path}\" alt=\"{id}\"/>\n{:else}\n<img on:click|preventDefault={() => setImage(i)} class=\"texturesample\"  src=\"{path}\" alt=\"{id}\"/>\n{/if}\n{/each}\n\n",
    "<script>\n  let username = localStorage.getItem(\"username\");\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let tabletextures = [\n    { id: 0, name: \"Skin #1\", path: 'table/img/table00.jpg', color:\"#761CEC\", selected:true},\n    { id: 1, name: \"Skin #2\", path: 'table/img/table01.jpg', color:\"#FC8EAC\", selected:false},\n    { id: 2, name: \"Skin #3\", path: 'table/img/table02.jpg', color:\"#A60570\", selected:false},\n    { id: 3, name: \"Skin #4\", path: 'table/img/table03.jpg', color:\"#A60570\", selected:false},\n  ];\n\n  let dicetextures = [\n    { id: 0, name: \"Dice #1\", path: 'dice/img/dice00.jpg', color:\"#761CEC\", selected:true},\n    { id: 1, name: \"Dice #2\", path: 'dice/img/dice01.jpg', color:\"#FC8EAC\", selected:false},\n    { id: 2, name: \"Dice #3\", path: 'dice/img/dice02.jpg', color:\"#A60570\", selected:false},\n  ];\n\n\n  let selectedtable = 0;\n  let selecteddice = 0;\n\n  localStorage.setItem(\"dicetexture\", dicetextures[selecteddice]['path']);\n  localStorage.setItem(\"tabletexture\", tabletextures[selectedtable]['path']);\n\n  let textureindex = 2;\n  let text = \"Game table selected by default\";\n\n  export let selectedImage = tabletextures[selectedtable]['path'];\n  export const selectedDiceImage = dicetextures[selecteddice]['path'];\n\n  export let matchingcolor;\n\n  function setTableImage(i) {\n    selectedImage = tabletextures[i]['path'];\n    matchingcolor = tabletextures[i]['color'];\n    tabletextures[selectedtable].selected = false;\n    tabletextures[i].selected = true;\n    selectedtable = i;\n\n\t\tdispatch('textureSelected', {\n\t\t\tpath: tabletextures[i]['path']\n        });\n    localStorage.setItem(\"tabletexture\", tabletextures[i]['path']);\n  }\n\n  function setDiceImage(i) {\n    selectedImage = dicetextures[i]['path'];\n    matchingcolor = dicetextures[i]['color'];\n    dicetextures[selecteddice].selected = false;\n    dicetextures[i].selected = true;\n    selecteddice = i;\n\n\t\tdispatch('textureDiceSelected', {\n\t\t\tpath: dicetextures[i]['path']\n        });\n     localStorage.setItem(\"dicetexture\", dicetextures[i]['path']);\n  }\n</script>\n\n<style>\n  h1 {\n    margin-top: 0;\n  }\n\n  .logo-small {\n    display: flex;\n    max-width: 330px;\n    margin: 2rem auto;\n    width: 100%;\n  }\n\n  .row-flex {\n    margin-bottom: 2rem;\n  }\n\n  .selectedtexture {\n    border: 0.1em solid #371B3E;\n    border-radius: 50%;\n    cursor: pointer;\n    height: 40px;\n    flex-shrink: 0;\n    margin: 0 .2rem;\n    padding: 0.1em;\n    width: 40px;\n  }\n\n  .texturesample {\n    border: 0.1em solid #CDB4CF;\n    border-radius: 50%;\n    cursor: pointer;\n    height: 30px;\n    flex-shrink: 0;\n    margin: 0 .2rem;\n    padding: 0.1em;\n    width: 30px;\n  }\n\n  .texturesample:hover {\n    border-color:#CF4AD9 ;\n  }\n\n</style>\n\n\n<img class=\"logo-small\" src=\"/images/logo-small.png\" alt=\"PARADICE\" border=\"0\">\n<div class=\"content-center\">\n\n  <h1>You're the Host!</h1>\n  <label>YOUR NAME</label>\n  <input class=\"input-center\" type=text bind:value={username} max=40>\n\n  <p>Table Skin</p>\n\n  <div class=\"row-flex\">\n    {#each tabletextures as { id, path, selected }, i}\n    {#if selected}\n    <img on:click|preventDefault={() => setTableImage(i)} class=\"selectedtexture\"  src=\"{path}\" alt=\"{id}\"/>\n    {:else}\n    <img on:click|preventDefault={() => setTableImage(i)} class=\"texturesample\"  src=\"{path}\" alt=\"{id}\"/>\n    {/if}\n    {/each}\n  </div>\n\n  <p>Dice Skin</p>\n\n  <div class=\"row-flex\">\n    {#each dicetextures as { id, path, selected }, i}\n    {#if selected}\n    <img on:click|preventDefault={() => setDiceImage(i)} class=\"selectedtexture\"  src=\"{path}\" alt=\"{id}\"/>\n    {:else}\n    <img on:click|preventDefault={() => setDiceImage(i)} class=\"texturesample\"  src=\"{path}\" alt=\"{id}\"/>\n    {/if}\n    {/each}\n  </div>\n\n  <a class=\"btn-primary\" href=\"/#/game/paradice-testing-game\">Start Playing</a>\n</div>\n",
    "<style>\n\t#ThreeJS {\n    position: absolute;\n    left: 0px;\n    top: 0px;\n\t}\n  #foreground {\n    z-index: 1000;\n    position: absolute;\n    left: 0px;\n    top: 0px;\n  }\n  .test {\n  color: white;\n}\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import io from 'socket.io-client';\n  import Table from '../Table.svelte';\n  import Player from '../Player.svelte';\n  import DiceInput from '../DiceInput.svelte';\n  import Roll, { initRollDice, rollDice, changeTexture } from '../Roll.svelte';\n  import SideBar from '../SideBar.svelte';\n \n\n  export let params = {};\n\n  const apiURL = \"https://guarded-stream-90676.herokuapp.com\" || \"https://guarded-stream-90676.herokuapp.com\";\n\n  let username = localStorage.getItem(\"username\");\n  if (!username) {\n    username = prompt(\"Please enter your user name\", \"\");\n    localStorage.setItem(\"username\", username);\n  }\n\n  let dicetexture = localStorage.getItem(\"dicetexture\");\n  let tabletexture = localStorage.getItem(\"tabletexture\");\n  \n\n  const socket = io(`${apiURL}/?username=${username}&game=${  params.gameId}`);\n\n  let userDict = {};\n  let userList = [];\n  let rolls = [];\n  let mylatestroll = 0;\n  let diceinput;\n  let modinput;\n  $: diceandmodinput = {dice: diceinput, mod: modinput};\n  let floorcolor = \"#00aa00\";\n  let texturepath;\n\n  onMount(()=> {\n    initRollDice();\n    changeTexture(tabletexture);\n\n  });\n\n  function roll() {\n    socket.emit(\"roll\", diceandmodinput);\n    new Audio('sounds/dice.mp3').play()\n  }\n\n  function handleTextureUpdated(event) {\n    changeTexture(event.detail.path);\n  }\n\n  // listen for roll event\n  socket.on(\"roll\", (userId, diceInput) => {\n    rollDice(diceInput);\n\t  if (userDict[userId]==username){\n\t\t  mylatestroll = diceInput.result;\n\t  }\n    rolls = [{\n      user: userDict[userId],\n      result: diceInput.result\n    }, ...rolls];\n  });\n\n  // listen for user list event\n  socket.on(\"users-list\", (data) => {\n    userDict = data;\n    userList = Object.values(data);\n  });\n\n\n</script>\n\n<Roll/>\n\n<div id=\"foreground\">\n  <Player playername={username} latestroll={mylatestroll}/>\n  <h2>Rollers</h2>\n  <ul>\n    {#each userList as user, i}\n      <li>\n        {user}\n      </li>\n    {/each}\n  </ul>\n\n  <button on:click={roll}>Roll dice</button>\n\n  <h2>Rolls</h2>\n  <ul>\n    {#each rolls as {user, result}, i}\n      <li>\n        {user}: {result}\n      </li>\n    {/each}\n  </ul>\n\n  <DiceInput bind:dice={diceinput} bind:modifier={modinput}/>\n  <SideBar/>\n</div>\n",
    "<script>\n  import {link} from 'svelte-spa-router'\n</script>\n\n\n<style>\n\n  .home-section {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    max-width: 900px;\n    margin-top: 5vh;\n    padding: 2rem;\n  }\n\n  .big-logo {\n    font-size: .1px;\n  }\n\n  .big-logo img {\n    width: 100%;    \n  }\n\n  .btn-primary {\n    margin-top: 5vh;\n    font-size: 24px;\n  }\n\n</style>\n\n<div class=\"home-section\">\n\n  <h1 class=\"big-logo\">\n    <img src=\"/images/logo.png\" alt=\"PARADICE\" border=\"0\">\n    PARADICE\n  </h1>\n\n  <a class=\"btn-primary\" href=\"/create\" use:link>Start Paradice</a>\n\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}