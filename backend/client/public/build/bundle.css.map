{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../DiceInput.svelte",
    "../../LatestRolls.svelte",
    "../../ParadiceLogo.svelte",
    "../../ResultBanner.svelte",
    "../../RollLog.svelte",
    "../../Table.svelte",
    "../../CreateParadice.svelte",
    "../../Game.svelte",
    "../../Home.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { modValidator } from './validators.js';\n  import Player from './Player.svelte';\n\n  import { writable } from \"svelte/store\";\n\n  export let dice = [\n    { id: 0, label: \"D4\", range: 4, qty: parseInt(localStorage.getItem(\"D4\")) || 0, factor: 1, mod: 5, result: 0 },\n    { id: 1, label: \"D6\", range: 6, qty: parseInt(localStorage.getItem(\"D6\")) || 0, factor: 1, mod: 7, result: 0 },\n    { id: 2, label: \"D8\", range: 8, qty: parseInt(localStorage.getItem(\"D8\")) || 0, factor: 1, mod: 9, result: 0 },\n    { id: 3, label: \"D10\", range: 10, qty: parseInt(localStorage.getItem(\"D10\")) || 0, factor: 1, mod: 11, result: 0 },\n    { id: 4, label: \"D12\", range: 12, qty: parseInt(localStorage.getItem(\"D12\")) || 0, factor: 1, mod: 13, result: 0 },\n    { id: 5, label: \"D20\", range: 20, qty: parseInt(localStorage.getItem(\"D20\")) || 0, factor: 1, mod: 21, result: 0 },\n    { id: 6, label: \"D100\", range: 10, qty: parseInt(localStorage.getItem(\"D100\")) || 0, factor: 10, mod: 100, result: 0 },\n  ]\n  export let modifier = '';\n\n  $: {\n    dice.forEach((d) => {\n      localStorage.setItem(d.label, d.qty);\n    })\n  }\n\n  function randomInt(dieid, qty){\n    let range = dice[dieid]['range'];\n    let res = 0;\n    if (qty > 0){\n      for (let index = 0; index < qty; index++) {\n      let r = Math.random() * 100;\n      let mod = range/100;\n      let d = Math.round(r*mod);\n      res = res + d;\n      }\n    }\n    modifier = res;\n    return res;\n  }\n\n  let latestroll = 0;\n\n</script>\n\n<style>\n\n  .sidebar-item {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding: .7rem .5rem;\n  }\n\n  h2 {\n    font-size: 1.2rem;\n    margin-top: 0;\n  }\n\n.dice-input {\n  align-items: center;\n  display: flex;\n}\n\n.dice-input span {\n  width: 35px;\n}\n\n.dice-input input,\n.mod-input input {\n  border-color: #CDB4CF;\n  color: #CF4AD9;\n}\n\n.mod-input {\n  display: flex;\n  flex-direction: column;\n  margin-top: 1rem;\n}\n</style>\n\n<div class=\"sidebar-item\">\n  <h2>Select your dice!</h2>\n  {#each dice as die}\n  <label class=\"dice-input\">\n    <span>{die.label}</span>\n    <input type=number bind:value={die.qty} min=0 max=20 size=4>\n  </label>\n  {/each}\n  <label class=\"mod-input\">\n    <span>{modValidator(modifier)}</span>\n    <input pattern=\"[+-]*[0-9]{1,3}\" title=\"(+/-)# please\" size=5 type=text bind:value={modifier}>\n  </label>\n</div>\n\n",
    "<script>\n\n    export let latestrolls = {};\n    let username = localStorage.getItem(\"username\");\n    $: latestrollsbinded = Object.keys(latestrolls);\n    let dicetexture = localStorage.getItem(\"dicetexture\");\n    console.log(dicetexture);\n    \n    \n\n</script>\n\n<style>\n    ul {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n        width: 100%;\n    }\n\n    li {\n        align-items: center;\n        padding: .2rem 0;\n        display: flex;\n        width: 100%;\n    }\n\n    .color-user {\n        background-color: aqua;\n       \n        background-position: center; /* Center the image */\n        background-repeat: no-repeat; /* Do not repeat the image */\n        background-size: cover; /* Resize the background image to cover the entire container */\n        border: 1px solid #333333;\n        border-radius: 50%;\n        flex-shrink: 0;\n        height: 14px;\n        margin-right: .4rem;\n        width: 14px;\n    }\n\n    .color-otheruser {\n        background-color: aqua;\n        border: 1px solid #333333;\n        border-radius: 50%;\n        flex-shrink: 0;\n        height: 14px;\n        margin-right: .4rem;\n        width: 14px;\n    }\n\n    .last-roll {\n        background-color: #F1E2F4;\n        margin-left: auto;\n        padding: .1rem .2rem;\n        text-align: center;\n        width: 20px;\n    }\n\n</style>\n\n<ul>\n    {#each latestrollsbinded as p}\n    {#if p==username}\n        <li>\n            <div class=\"color-user\" style=\" background-image: url({dicetexture});\"></div>\n            <span>{p} (You)</span>\n            <span class=\"last-roll\">{latestrolls[p]}</span>\n        </li>\n    {:else}\n        <li>\n            <div class=\"color-otheruser\"></div>\n            <span>{p} (You)</span>\n            <span class=\"last-roll\">{latestrolls[p]}</span>\n        </li>\n\n    {/if}\n    {/each}\n</ul>",
    "<script>\n\n</script>\n\n<style>\n\n  .logo-sidebar {\n    display: flex;\n    max-width: 200px;\n    margin: 1rem;\n    width: 100%;\n  }\n\n</style>\n\n<img class=\"logo-sidebar\" src=\"/images/logo-small.png\" alt=\"PARADICE\" border=\"0\">\n",
    "<script>\n  export let playername = '';\n  export let latestroll = 0;\n</script>\n\n<style>\n\n.roll-result {\n  background-color: rgba(55, 27, 62, 0.8);\n  padding: 0.6rem 1rem;\n  color: #CF4AD9;\n  position: fixed;\n  font-size: 1.6rem;\n  left: 46%;\n  top: 1.6rem;\n  z-index: 1000;\n}\n\n.roll-result span {\n  color: #ffffff;\n  margin-left: .6rem;\n}\n\n.roll-result span.maths {\n  color: rgba(255,255,255,.5);\n}\n\n</style>\n\n{#if playername!=''}\n  <div class=\"roll-result\">{playername} got <span>{latestroll}</span> <span class=\"maths\">1d6 + 2d10 + 6</span></div>\n{/if}",
    "<script>\n    export let rolls = {};\n</script>\n\n<style>\n\n.sidebar-item {\n    padding: 0;\n}\n\n.roll-log-list {\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    overflow-y: auto;\n    margin: -1px 2px 0 0;\n    height: 178px;\n    padding: 0 .5rem;\n    width: 100%;\n}\n\n.roll-log-list li {\n    border-top: 1px solid #CDB4CF;\n    padding: .3rem 0;\n    display: flex;\n    font-size: .9rem;\n    flex-direction: column;\n}\n\n.roll-op {\n    font-size: .8rem;\n}\n\n/* SCROLLBAR */\n\n.roll-log-list::-webkit-scrollbar {\n    width: .3em;\n}\n\n.roll-log-list::-webkit-scrollbar-track {\n    background-color:  transparent;\n}\n \n.roll-log-list::-webkit-scrollbar-thumb {\n    background-color: #ccacce;\n}\n\n</style>\n\n<div class=\"sidebar-item\">\n    <ul class=\"roll-log-list\">\n      {#each rolls.slice(0,50) as {user, result}, i}\n\n          <li>\n            <span>{user}</span>\n            <span class=\"roll-op\">2D4 + 1d20 +6 = {result}</span>\n          </li>\n\n      {/each}\n    </ul>\n</div>",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let tabletextures = [\n    { id: 0, name: \"Tavern #1\", path: 'table/img/table00.jpg', color:\"#761CEC\", selected:true},\n    { id: 1, name: \"Tavern #2\", path: 'table/img/table01.jpg', color:\"#FC8EAC\", selected:false},\n    { id: 2, name: \"Tavern #3\", path: 'table/img/table02.jpg', color:\"#A60570\", selected:false},\n  ];\n\n  let selected = 0;\n  let textureindex = 2;\n  let text = \"Game table selected by default\";\n\n  export let selectedImage = tabletextures[textureindex]['path'];\n  export let matchingcolor;\n\n  function setImage(i) {\n    selectedImage = tabletextures[i]['path'];\n    text = \"You chose \"+tabletextures[i]['name'];\n    matchingcolor = tabletextures[i]['color'];\n    tabletextures[selected].selected = false;\n    tabletextures[i].selected = true;\n    selected = i;\n\n\t\tdispatch('textureSelected', {\n\t\t\tpath: tabletextures[i]['path']\n\t\t});\n  }\n\n</script>\n\n<style>\nimg {\n    padding: 0.5em;\n    border: 0.1em solid aquamarine;\n\n}\n\n.selectedtexture {\n    padding: 0.5em;\n    border-radius: 10%;\n    width: 100px;\n    border: 0.1em solid red;\n\n}\n\n.texturesample {\n  padding: 0.5em;\n  border-radius: 10%;\n  width: 100px;\n}\n\n</style>\n\n<h1>Choose your game table texture</h1>\n\n{#each tabletextures as { id, path, selected }, i}\n{#if selected}\n<img on:click|preventDefault={() => setImage(i)} class=\"selectedtexture\"  src=\"{path}\" alt=\"{id}\"/>\n{:else}\n<img on:click|preventDefault={() => setImage(i)} class=\"texturesample\"  src=\"{path}\" alt=\"{id}\"/>\n{/if}\n{/each}\n\n",
    "<script>\n  import { TABLE_TEXTURES, DICE_TEXTURES } from '../constants';\n\n  let username = localStorage.getItem(\"username\");\n  if (!username) {\n    username = \"Your name\";\n  }\n\n  $: {\n    localStorage.setItem(\"username\", username);\n  }\n\n  let selectedTable = localStorage.getItem(\"tabletexture\");\n  if (!selectedTable) {\n    setTableImage(TABLE_TEXTURES[0].path);\n  }\n  let selectedDice = localStorage.getItem(\"dicetexture\");\n  if (!selectedDice) {\n    setDiceImage(DICE_TEXTURES[0].path);\n  }\n\n  function setTableImage(path) {\n    selectedTable = path;\n    localStorage.setItem(\"tabletexture\", path);\n  }\n\n  function setDiceImage(path) {\n    selectedDice = path;\n    localStorage.setItem(\"dicetexture\", path);\n  }\n</script>\n\n<style>\n  h1 {\n    margin-top: 0;\n  }\n\n  .logo-small {\n    display: flex;\n    max-width: 330px;\n    margin: 2rem auto;\n    width: 100%;\n  }\n\n  .row-flex {\n    margin-bottom: 2rem;\n  }\n\n  .selectedtexture {\n    border: 0.1em solid #371B3E;\n    border-radius: 50%;\n    cursor: pointer;\n    height: 40px;\n    flex-shrink: 0;\n    margin: 0 .2rem;\n    padding: 0.1em;\n    width: 40px;\n  }\n\n  .texturesample {\n    border: 0.1em solid #CDB4CF;\n    border-radius: 50%;\n    cursor: pointer;\n    height: 30px;\n    flex-shrink: 0;\n    margin: 0 .2rem;\n    padding: 0.1em;\n    width: 30px;\n  }\n\n  .texturesample:hover {\n    border-color:#CF4AD9 ;\n  }\n\n</style>\n\n\n<img class=\"logo-small\" src=\"/images/logo-small.png\" alt=\"PARADICE\" border=\"0\">\n<div class=\"content-center\">\n\n  <h1>You're the Host!</h1>\n  <label>YOUR NAME</label>\n  <input class=\"input-center\" type=text bind:value={username} max=40>\n\n  <p>Table Skin</p>\n\n  <div class=\"row-flex\">\n    {#each TABLE_TEXTURES as { id, path }, i}\n    {#if path == selectedTable}\n    <img on:click|preventDefault={() => setTableImage(path)} class=\"selectedtexture\"  src=\"{path}\" alt=\"{id}\"/>\n    {:else}\n    <img on:click|preventDefault={() => setTableImage(path)} class=\"texturesample\"  src=\"{path}\" alt=\"{id}\"/>\n    {/if}\n    {/each}\n  </div>\n\n  <p>Dice Skin</p>\n\n  <div class=\"row-flex\">\n    {#each DICE_TEXTURES as { id, path }, i}\n    {#if path == selectedDice}\n    <img on:click|preventDefault={() => setDiceImage(path)} class=\"selectedtexture\"  src=\"{path}\" alt=\"{id}\"/>\n    {:else}\n    <img on:click|preventDefault={() => setDiceImage(path)} class=\"texturesample\"  src=\"{path}\" alt=\"{id}\"/>\n    {/if}\n    {/each}\n  </div>\n\n  <a class=\"btn-primary\" href=\"/#/game/paradice-testing-game\">Start Playing</a>\n</div>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import io from 'socket.io-client';\n  import Table from '../Table.svelte';\n  import Player from '../Player.svelte';\n  import DiceInput from '../DiceInput.svelte';\n  import Roll, { initRollDice, rollDice, changeTexture } from '../Roll.svelte';\n  import ParadiceLogo from '../ParadiceLogo.svelte';\n  import LatestRolls from '../LatestRolls.svelte';\n  import RollLog from '../RollLog.svelte';\n  import RollDice from '../RollDice.svelte';\n  import ResultBanner from '../ResultBanner.svelte';\n  import { DICE_TEXTURES } from '../constants';\n\n  export let params = {};\n\n  const apiURL = \"https://guarded-stream-90676.herokuapp.com\" || \"https://guarded-stream-90676.herokuapp.com\";\n\n  let username = localStorage.getItem(\"username\");\n  let dicetexture = localStorage.getItem(\"dicetexture\");\n  let tabletexture = localStorage.getItem(\"tabletexture\");\n\n  const socket = io(`${apiURL}/?username=${username}&game=${  params.gameId}`);\n\n  let userDict = {};\n  let userList = [];\n  let rolls = [];\n  let mylatestroll = 0;\n  let diceinput;\n  let modinput;\n\n  $: diceandmodinput = {\n    dice: diceinput,\n    mod: modinput,\n    fontColor: DICE_TEXTURES.find((texture) => texture.path == localStorage.getItem(\"dicetexture\")).fontColor,\n    texture: localStorage.getItem(\"dicetexture\")\n  };\n\n  let floorcolor = \"#00aa00\";\n  let texturepath;\n  let latestplayer;\n  let latestroll;\n  let latestplayerandrolls = {};\n\n  onMount(()=> {\n    initRollDice();\n    changeTexture(tabletexture);\n\n  });\n\n  function roll() {\n    socket.emit(\"roll\", diceandmodinput);\n    new Audio('sounds/dice.mp3').play()\n  }\n\n  function handleTextureUpdated(event) {\n    changeTexture(event.detail.path);\n  }\n\n  // listen for roll event\n  socket.on(\"roll\", (userId, diceInput) => {\n    rollDice(diceInput);\n    latestplayer = userDict[userId];\n    latestroll = diceInput.result;\n    latestplayerandrolls[latestplayer] = latestroll;\n\n    rolls = [{\n      user: userDict[userId],\n      result: diceInput.result\n    }, ...rolls];\n  });\n\n  // listen for user list event\n  socket.on(\"users-list\", (data) => {\n    userDict = data;\n    userList = Object.values(data);\n  });\n\n</script>\n\n<style>\n\n\t#ThreeJS {\n    position: absolute;\n    left: 0px;\n    top: 0px;\n  }\n\n  .btn-primary {\n    padding: .3rem;\n    margin: .6rem .3rem;\n  }\n\n</style>\n\n<Roll/>\n\n<div id=\"foreground\">\n  <ResultBanner playername={latestplayer} latestroll={latestroll}/>\n  <ParadiceLogo/>\n  <div class=\"sidebar-content\">\n    <div class=\"sidebar-item\">\n      <LatestRolls bind:latestrolls={latestplayerandrolls}/>\n    </div>\n    <RollLog bind:rolls={rolls}/>\n    <DiceInput bind:dice={diceinput} bind:modifier={modinput}/>\n    <button class=\"btn-primary\" on:click={roll}>Roll dice</button>\n  </div>\n</div>\n",
    "<script>\n  import {link} from 'svelte-spa-router'\n</script>\n\n\n<style>\n\n  .home-section {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    max-width: 900px;\n    margin-top: 5vh;\n    padding: 2rem;\n  }\n\n  .big-logo {\n    font-size: .1px;\n  }\n\n  .big-logo img {\n    width: 100%;    \n  }\n\n  .btn-primary {\n    margin-top: 5vh;\n    font-size: 24px;\n  }\n\n</style>\n\n<div class=\"home-section\">\n\n  <h1 class=\"big-logo\">\n    <img src=\"/images/logo.png\" alt=\"PARADICE\" border=\"0\">\n    PARADICE\n  </h1>\n\n  <a class=\"btn-primary\" href=\"/create\" use:link>Start Paradice</a>\n\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}